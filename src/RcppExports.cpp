// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// covUpdate
arma::mat covUpdate(arma::vec x, arma::mat S, arma::vec mean_n, int n);
RcppExport SEXP _bmgpm_covUpdate(SEXP xSEXP, SEXP SSEXP, SEXP mean_nSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean_n(mean_nSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(covUpdate(x, S, mean_n, n));
    return rcpp_result_gen;
END_RCPP
}
// fixedMCMC
arma::mat fixedMCMC(arma::vec X, double sigma);
RcppExport SEXP _bmgpm_fixedMCMC(SEXP XSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(fixedMCMC(X, sigma));
    return rcpp_result_gen;
END_RCPP
}
// adaptMCMC
arma::mat adaptMCMC(arma::vec X, arma::mat S, double beta, double sigma);
RcppExport SEXP _bmgpm_adaptMCMC(SEXP XSEXP, SEXP SSEXP, SEXP betaSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(adaptMCMC(X, S, beta, sigma));
    return rcpp_result_gen;
END_RCPP
}
// mcmcmove
NumericVector mcmcmove(NumericVector p, double sigma);
RcppExport SEXP _bmgpm_mcmcmove(SEXP pSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mcmcmove(p, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bmgpm_covUpdate", (DL_FUNC) &_bmgpm_covUpdate, 4},
    {"_bmgpm_fixedMCMC", (DL_FUNC) &_bmgpm_fixedMCMC, 2},
    {"_bmgpm_adaptMCMC", (DL_FUNC) &_bmgpm_adaptMCMC, 4},
    {"_bmgpm_mcmcmove", (DL_FUNC) &_bmgpm_mcmcmove, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bmgpm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
